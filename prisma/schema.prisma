// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Student {
  id             Int       @id @default(autoincrement())
  firstName      String    @db.VarChar(50)
  lastName       String    @db.VarChar(50)
  dateOfBirth    DateTime? @db.Date()
  discordWebHook String?   @unique
  groupeId       Int
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt()
  groupe         Groupe    @relation(fields: [groupeId], references: [id])
}

model Formation {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  Groupe    Groupe[]

  // @@map("formation")  Pour rename la table dans la DB
  // @@unique([key1, key2]) Pour s'assuré que table formation ne 
  // permete pas une asociation des clef étrangere key1 et key2 identique
}

model Groupe {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(50)
  formationId Int
  leadId      Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt()
  student     Student[]
  formation   Formation  @relation(fields: [formationId], references: [id])
  lead        TeamMember @relation(fields: [leadId], references: [id])
}

model TeamMember {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  instructor Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt()
  Groupe     Groupe[]
}
